<?php
	/*
	Дан массив $arr. Выведите на экран первый и последний элемент
данного массива.

	$arr = array(1, 2, 3, 4, 5);
	echo $arr[count($arr)-1];

Дан массив $arr. С помощью функций array_sum и count найдите
среднее арифметическое элементов данного массива.

$arr = array(1, 2, 3, 4, 5);
echo array_sum($arr)/count($arr);

На array_merge и array_slice
1. Даны два массива: первый с элементами '1', '2', '3', второй с
элементами 'a', 'b', 'c'. Сделайте из них массив с элементами '1', '2', '3',
'a', 'b', 'c'.
2. Даны массив с элементами '1', '2', '3', '4', '5'. С помощью функции
array_slice создайте массив $b с элементами '2', '3', '4'.


$arr1 = array(1, 2, 3);
$arr2 = array('a', 'b', 'c');
print_r (array_merge($arr1, $arr2));



$arr = array(1,2,3,4,5);
print_r(array_slice($arr,1,3));



На array_keys, array_values, array_combine
1. Дан массив 'green'=>'зеленый', 'blue'=>'голубой', 'red'=>'красный'.
Запишите в массив $key английские названия цветов, а в $values –
русские.
2. Даны два массива: 'green', 'blue', 'red' и ''зеленый', 'голубой', 'красный'.
Создайте с их помощью массив 'green'=>'зеленый', 'blue'=>'голубой',
'red'=>'красный'. Используйте функцию array_combine.



$arr = array('green'=>'зеленый', 'blue'=>'голубой', 'red'=>'красный');
print_r(array_keys($arr));
print_r(array_values($arr));


$arr1 = array('green', 'blue', 'red');
$arr2 = array('зеленый', 'голубой', 'красный');
print_r(array_combine($arr1,$arr2));

	

На array_flip, array_count_values, array_reverse,
array_unique
1. Дан массив 'green'=>'зеленый', 'blue'=>'голубой', 'red'=>'красный'.
Поменяйте местами ключи и значения.
2. Дан массив с элементами '1', '2', '3', '4', '5'. Создайте массив с
элементами '5', '4', '3', '2', '1'.
3. Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Удалите из него
повторяющиеся элементы.
4. Дан массив с элементами 'a', 'b', 'c', 'b', 'a'. Подсчитайте сколько раз
встречается каждая из букв.
	

$a = array('green'=>'зеленый', 'blue'=>'голубой', 'red'=>'красный');
print_r(array_flip($a));



$a = array('1', '2', '3', '4', '5');
print_r(array_reverse($a));


$a = array('a', 'b', 'c', 'b', 'a');
print_r(array_unique($a));
	

$a = array('a', 'b', 'c', 'b', 'a');
print_r(array_count_values($a));




$a = array('a'=>'2.png', 'b'=>'1.png', 'c'=>'10.png', 'd'=>'20.png', 'e'=>'11.png');
//asort($a);
natsort($a);
print_r($a); // массив $a станет: array('a'=>'1.png', 'b'=>'10.png', 'c'=>'11.png', 'd'=>'2.png', 'e'=>'20.png')



$a = array('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5);
shuffle($a);
print_r($a);


$a = array('a'=>1,'b'=>2,'c'=>3,'d'=>4,'e'=>5);
echo array_rand($a); // каждый раз будет возвращать разный ключ: 'a', 'b', 'c', 'd' или 'e'
echo $a[array_rand($a)]; // так мы можем вывести случаный элемент массива


На array_map и array_walk
1. Дан массив с элементами '1', '2', '3', '4', '5'. Создайте новый массив, в
котором будут лежать квадратные корни данных элементов.
2. Дан массив с элементами '<b>php</b>', '<i>html</i>'. Создайте новый
массив, в котором из элементов будут удалены теги.
На array_chunk и array_pad
1. Дан массив с элементами '1', '2', '3'. Сделайте из него массив с
элементами '1', '2', '3', '0', '0', '0'.
2. Создайте массив, заполненный целыми числами от 1 до 20. С
помощью функции array_chunk разбейте этот массив на 5
подмассивов ('1', '2', '3', '4'; '5', '6', '7', '8' и т. д.).



$a = array('1', '2', '3', '4', '5');
$b = array_map('sqrt', $a);
$c = array_map('round', $b);
print_r($c);



$a = array('1', '2', '3');
$b = array_pad($a, 2, '0');
print_r($b);



$a = range(1, 11);
$num = floor(count($a)/5);
$b = array_chunk($a, $num);
var_dump($b);

*/
?>