<?php
/*
Работа с датами в PHP
Timestamp: time и mktime

1. Выведите текущее время в формате timestamp.
echo time();

2. Выведите 1 января 2025 года в формате timestamp.
echo mktime(0, 0, 0, 1, 1, 2025);

3. Выведите 31 декабря текущего года в формате timestamp. Скрипт должен работать
независимо от года, в котором он запущен.
echo mktime(0, 0, 0, 12, 31);

4. Найдите количество секунд, прошедших с 13:12:59 15-го марта 2000 года до
настоящего момента.
echo mktime(13, 12, 59, 3, 15, 2000);
/*
5. Найдите количество секунд $sec, прошедших с 7:23:48 1-го числа текущего месяца
до настоящего момента. Найдите количество минут, часов и дней, содержащихся в
$sec (не одновременно, а последовательно: сначала минуты, потом часы и т.д.).
$sec = time() - mktime(7, 23, 48, 2, 1);
$min = $sec / 60;
$hours = $sec / (60*60);
$days = $sec / (60*60*24);
echo $days;


Функция date

6. Выведите на экран текущий год, день, месяц, час, минуту, секунду.
echo date('Y-m-d H:i:s');

7. Выведите текущую дату-время в форматах '2013-12-31', '31.12.2013', '31.12.13',
'12:59:59'.
echo date('Y-m-d', mktime(0, 0, 0, 12, 31, 2013));
echo date('d.m.Y', mktime(0, 0, 0, 12, 31, 2013));
echo date('d.m.y H:i:s', mktime(12, 59, 59, 12, 31, 2013));

8. С помощью функций mktime и date выведите 13 февраля 2015 года в формате
'31.12.2013'.
echo date('d.m.Y', mktime(0, 0, 0, 2, 13, 2015));

9. Создайте массив дней недели $week. Выведите на экран название текущего дня
недели с помощью массива $week и функции date. Узнайте какой день недели был
06.06.2006, в ваш день рождения.
$week = array('Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat');
$day = date('w');
echo $week[$day];

$day1 = date('w', mktime(0, 0, 0, 6, 6, 2013));
echo $week[$day1];

10. Создайте массив месяцев $month. Выведите на экран название текущего месяца с
помощью массива $month и функции date.
$months = array('', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec');
$m = date('n');
echo $months[$m];

11. Найдите номер текущего дня от начала месяца.
echo date('w');

12. Найдите количество дней в текущем месяце. Скрипт должен работать независимо
от месяца, в котором он запущен.
echo date('t');

13. Сделайте поле ввода, в которое пользователь вводит год (4 цифры), а скрипт
определяет високосный ли год.
$year = 2016;
echo date('L', mktime(0, 0, 0, 1, 1, $year));


14. Сделайте форму, которая спрашивает дату в формате '31.12.2013'. С помощью
функций explode и mktime переведите эту дату в формат timestamp. Узнайте день
31 недели (словом) за введенную дату.

$week = array('Sun', 'Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat');
$date = '13.12.2013';
$a = explode('.', $date);
$n = mktime(0,0,0,$a[1], $a[0], $a[2]);
$day = date('w', $n);
echo $week[$day];


15. Сделайте форму, которая спрашивает дату в формате '2013-12-31'. С помощью
функций explode и mktime переведите эту дату в формат timestamp. Узнайте месяц
(словом) за введенную дату.

$months = array('', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec');
$date = '11.02.2015';
$a = explode('.', $date);
$n = mktime(0,0,0,$a[1], $a[0], $a[2]);
$m = date('n', $n);
echo $months[$m];


16. Сделайте форму, которая спрашивает у пользователя дату в формате '2013-12-
31T12:59:59'. С помощью функций explode и mktime переведите эту дату в формат
timestamp. Узнайте месяц (словом) за введенную дату. Подсказка: explode следует
применить дважды.

$date = '2013-12-31T12:59:59';
$s = explode('T', $date);
$d = explode('-', $s[0]);
$h = explode(':', $s[1]);

$months = array('', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec');
$n = mktime($h[0], $h[1], $h[2], $d[1], $d[0], $d[2]);
$month = $months[date('n', $n)];
echo $month;


Сравнение дат

17. Сделайте форму, которая спрашивает две даты в формате '2013-12-31'. Первую дату
запишите в переменную $date1, а вторую в $date2. Сравните, какая из введенных
дат больше. Выведите ее на экран.

$date1 = '2015.12.15';
$date2 = '2014.12.14';

if($date1 > $date2){
	echo "$date1 > $date2";
}else{
	echo "$date1 < $date2";
}


На strtotime

18. Дана дата в формате '2013-12-31'. С помощью функции strtotime преобразуйте ее в
формат '31-12-2013'.

$date = '2013-12-31';
echo date('d-m-Y',strtotime($date));

19. Сделайте форму, которая спрашивает дату-время в формате '2013-12-31T12:13:59'.
С помощью функции strtotime преобразуйте ее в формат '12:13:59 31.12.2013'.

$date = '2013-12-31T12:13:59'; // T - эталон, когда пишется, инач можно '2013-12-31 12:13:59';
echo date('H:i:s d.m.Y',strtotime($date));


Прибавление и отнимание от дат

20. Прибавьте к дате 31.12.2013 один день. Результат выведите в том же формате.

$date = '31.12.2013';
echo date('d.m.Y', strtotime("$date +1 day"));

21. В переменной $date лежит дата в формате '2013-12-31'. Прибавьте к этой дате 2
дня, 1 месяц и 3 дня, 1 год. Отнимите от этой даты 3 дня.

$date = '2013-12-31';
echo date('d.m.Y', strtotime("$date +2 day"));
echo date('d.m.Y', strtotime("$date +1 month 3 days"));
echo date('d.m.Y', strtotime("$date +1 year"));



Задачи


22. Передайте в адресную строку GET-параметр date, в котором будет записана дата в
формате '2013-12-31'. Преобразуйте ее в формат '31.12' (день.месяц).

if($_GET['date']){
	echo date('d.m', strtotime($_GET['date']));
}else{
	echo "<a href='".$_SERVER['PHP_SELF']."?date=2013-12-31'>Передать дату</a>";
}

23. Найдите количество дней, часов, минут, секунд, прошедших с 5:49:59 1-го числа
текущего месяца до настоящего момента.

$sec = time() - mktime(5, 49, 59, 2, 1);
$days = floor($sec / (60*60*24));
$ostatok = $sec - ($days * 24 * 60 * 60);
$hours = floor($ostatok / (60*60));
$ostatok2 = $ostatok - ($hours * 60 * 60);
$min = floor($ostatok2 / 60);
$ostatok3 = $ostatok2 - ($min * 60);

echo "Дней: $days, часов: $hours, минут: $min, сек: $ostatok3";



24. Узнайте сколько дней осталось до Нового Года.

$newyear = mktime(0, 0, 0, 1, 1, date('Y') + 1);
$sec = $newyear - time();
$days = floor($sec / (60*60*24));
echo "До нового года осталось: $days дней";

25. Дан GET-параметр date, в который вводится год в формате '2013'. Посчитайте
сколько воскресений в этом году приходится на первое число месяца.

$year = 2015;
$num = 0;
for($month=1; $month<=12; $month++){
	// Определяем w – день недели каждого месяца(0 — воскресенье, 1 — понедельник и т.д.).
    $d = date('w', mktime(0, 0, 0, $month, 1, $year));
    if($d == 0) $num ++;
}
echo "Всего воскресений: $num";

26. Найдите сколько воскресений будет в определенном году $year.

$year = 2015;
$num = 0;
for($month = 1; $month <= 12; $month++){
	$days_in_month = date('t', mktime(0, 0, 0, $month, 1, $year));
	for($day = 1; $day <= $days_in_month; $day++){
	    $d = date('w', mktime(0, 0, 0, $month, $day, $year));
	    if($d == 0) $num ++;
	}
	echo "$month [Дней: $days_in_month - Воскресений: $num]<br />";
	$sunday += $num;
	$num = 0;
}
echo "Всего воскресений в $year году: $sunday";

27. Сделайте форму с одним полем ввода, в которое пользователь вводит год. Найдите
все пятницы 13-е в этом году. Результат выведите в виде списка дат.

$year = 2015;
$friday = 0;
for($month = 1; $month <= 12; $month++){
	$days_in_month = date('t', mktime(0, 0, 0, $month, 1, $year));
	for($day = 1; $day <= $days_in_month; $day++){
	    $d = date('w', mktime(0, 0, 0, $month, $day, $year));
	    if($d == 5){
		    if( date('d', mktime(0, 0, 0, $month, $day, $year)) == 13){
			   $friday++; 
			   $friday_date .= date('d.m.Y', mktime(0, 0, 0, $month, $day, $year)).'<br>';
		    }
	    }
	}
}
echo "В $year году 'пятниц 13-го' - <b>$friday</b><br><br>Они выпадают на числа:<br>$friday_date";

28. Дана дата в формате '2013-12-31'. Определите знак зодиака, к которому относится
данная дата.
Козерог, знак Земли, с 22 декабря по 20 января;
Водолей, знак Воздуха, с 21 января по 19 февраля;
Рыбы, знак Воды, с 20 февраля по 20 марта;
Овен, знак Огня, с 21 марта по 20 апреля;
Телец, знак Земли, с 21 апреля по 21 мая;
Близнецы, знак Воздуха, с 22 мая по 21 июня;
Рак, знак Воды, с 22 июня по 23 июля;
Лев, знак Огня, с 24 июля по 23 августа;
Дева, знак Земли, с 24 августа по 23 сентября;
Весы, знак Воздуха, с 24 сентября по 23 октября;
Скорпион, знак Воды, с 24 октября по 22 ноября;
Стрелец, знак Огня, с 23 ноября по 21 декабря.
*/
$date = '2013-12-31';
$zodiac = array(
	array(
		'name'=>'Козерог',
		'd_start'=>'22.12',
		'd_end'=>'20.01'
	),
	array(
		'name'=>'Водолей',
		'd_start'=>'21.01',
		'd_end'=>'19.02'
	)
);
/*



29. Дан GET-параметр date, в который вводится год в формате '2013'. Узнайте, какой
это будет год по восточному календарю.

30. Узнайте какой день недели был 100 дней назад.

31. Сделайте массив праздников. Если пользователь заходит на сайт в праздник —
поздравьте его с этим праздником.

32. Рассчитайте дату пасхи в заданном году. Алгоритм ее расчета найдите в поисковых
системах.

33. Сделайте сайт-гороскоп: пользователь заходит на сайт и вводит дату своего
рождения. Сайт определяет его знак зодиака и выдает гороскоп на день захода
пользователя на сайт. Гороскопы храните в многомерном массиве, на неделю
вперед.

*/


/*
	// Задача

	//123234
	//12 дне 3 часа 15 мин 10 сек
*/





?>



